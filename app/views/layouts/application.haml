!!!
%html
  %head
    %title NearBuy
    = stylesheet_link_tag "application", :media => "all"
    = javascript_include_tag "application"
    = csrf_meta_tags
    %meta{name: "viewport", content: "width=device-width, initial-scale=1.0"}
    /%link{href: "/assets/BootStrap/bootstrap-responsive.css", rel: "stylesheet"}

  %body
    .navbar.navbar-inverse.navbar-fixed-top
      .navbar-inner
        .container
          / .btn-navbar is used as the toggle for collapsed navbar content
          %button.btn.btn-navbar{"data-target" => ".nav-collapse", "data-toggle" => "collapse", type: "button"}
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          / Be sure to leave the brand out there if you want it shown
          = link_to "Nearby", root_path, class:"brand"
          / Everything you want hidden at 940px or less, place within here
          .nav-collapse.collapse
            / .nav, .navbar-search, .navbar-form, etc
            %ul.nav
              - if current_user
                %li 
                  = link_to "My Profile", user_path(current_user)

                %li 
                  = link_to "My Items", items_path
              
                %li 
                  = link_to "Business", root_path

            %ul.nav.pull-right
              %li
                - if !current_user
                  %a{href:"#login_modal", "data-toggle" => "modal"}Login
                - else
                  = link_to "Logout #{current_user.email}", logout_path



    - if !current_user 
      #login_modal.modal.hide.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
        .modal-header
          %button.close{"aria-hidden" => "true", "data-dismiss" => "modal", :type => "button"} &times;
          %h3#myModalLabel Sign In  
 
        = render partial:"sessions/login"

    .container 
      .row
        .span12 
          - unless flash[:notice].blank?
            .alert
              = flash[:notice]
          - unless flash[:alert].blank?
            .alert.alert-error  
              = flash[:alert]
          
    .container
      = yield 

    = content_for :scripts
